---
- name: Ensure lvm2-utils installed
  package: name=lvm2 state=present

- name: Check for /dev/vdb is attached
  command: ls -la /dev/ | grep vdb
  register: vdb
  failed_when: vdb.rc is not defined
  changed_when: vdb.rc !=0
  tags: check disk

- name: Remove previous mount from fstab
  lineinfile:
    dest: /etc/fstab
    regexp: "^/dev/vdb (?!.*{{ old_mount }} ).*"
    state: absent

- name: Umount old mount points from destination
  command: umount -f /dev/vdb
  ignore_errors: yes

- name: Create VG
  lvg:
    vg: "{{ vg_name }}"
    pvs: /dev/vdb
    state: present
  when: vdb.rc !=0
  tags: vg_created

- name: Create LVM
  lvol:
    vg: "{{ vg_name }}"
    lv: "{{ lv_name }}"
    size: +100%FREE
    opts: --wipesignatures y
  when: vdb.rc !=0
  tags: lv_created

- name: Create FS on LVM
  shell: mkfs.{{ volume_fs }} -n ftype=0 /dev/mapper/{{ vg_name }}-{{ lv_name }} -f
  when: ansible_distribution == 'OracleLinux' and ansible_distribution_version == '7.5'  

- name: Create FS on LVM
  filesystem: 
    fstype: "{{ volume_fs }}" 
    dev: "/dev/mapper/{{ vg_name }}-{{ lv_name }}"
  when: ansible_distribution == 'OracleLinux' and ansible_distribution_version == '7.1'

- name: Mount volume and create fstab
  mount:
    name: "{{ old_mount }}"
    src: "/dev/mapper/{{ vg_name }}-{{ lv_name }}"
    state: mounted
    fstype: "{{ volume_fs }}"
  tags: volume_mounted

- name: Create tag file after lvm task on {{ ansible_hostname }}
  file: path=/tmp/lvm_created.tag state=touch owner=root group=root mode=0644
  

- name: Reboot server for checking mount
  reboot:
